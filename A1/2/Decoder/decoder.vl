//Project by Dhanasekhar.M 17CO214 and Narayan.G 17CO225
//Building a 4x16 decoder


module decoder(decoder_input, enable, decoder_output);

input [3:0] decoder_input ;
input enable ;
output [15:0] decoder_output; 

reg decoder_output;

always @(enable or decoder_input)
	begin
		decoder_output = 0;
		if(enable) begin
			case(decoder_input)
				4'h0 : decoder_output = 16'h0001 ;
				4'h1 : decoder_output = 16'h0002 ;
				4'h2 : decoder_output = 16'h0004 ;
				4'h3 : decoder_output = 16'h0008 ;
				4'h4 : decoder_output = 16'h0010 ;
				4'h5 : decoder_output = 16'h0020 ;
				4'h6 : decoder_output = 16'h0040 ;
				4'h7 : decoder_output = 16'h0080 ;
				4'h8 : decoder_output = 16'h0100 ;
				4'h9 : decoder_output = 16'h0200 ;
				4'hA : decoder_output = 16'h0400 ;
				4'hB : decoder_output = 16'h0800 ;
				4'hC : decoder_output = 16'h1000 ;
				4'hD : decoder_output = 16'h2000 ;
				4'hE : decoder_output = 16'h4000 ;
				4'hF : decoder_output = 16'h8000 ;
			endcase
		end
	end 
	



endmodule
