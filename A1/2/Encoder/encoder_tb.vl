`include "encoder.vl"
module encoder_tb;
	reg [15:0] encoder_input;
	reg enable;
	wire [3:0] encoder_output;

	encoder DUT(.encoder_input(encoder_input), .enable(enable), .encoder_output(encoder_output));

	initial
		begin
			$dumpfile("wave.vcd");
			$dumpvars(0,encoder_tb);
				enable = 0;
				encoder_input = 16'h0001;
			#10 encoder_input = 16'h0002;
			#10 encoder_input = 16'h0004;
			#10 encoder_input = 16'h0008;
			#10 encoder_input = 16'h0010;
			#10 encoder_input = 16'h0020;
			#10 encoder_input = 16'h0040;
			#10 encoder_input = 16'h0080;
			#10 encoder_input = 16'h0100;
			#10 encoder_input = 16'h0200;
			#10 encoder_input = 16'h0400;
			#10 encoder_input = 16'h0800;
			#10 encoder_input = 16'h1000;
			#10 encoder_input = 16'h2000;
			#10 encoder_input = 16'h4000;
			#10 encoder_input = 16'h8000;

			#10 enable = 1;
				encoder_input = 16'h0001;
			#10 encoder_input = 16'h0002;
			#10 encoder_input = 16'h0004;
			#10 encoder_input = 16'h0008;
			#10 encoder_input = 16'h0010;
			#10 encoder_input = 16'h0020;
			#10 encoder_input = 16'h0040;
			#10 encoder_input = 16'h0080;
			#10 encoder_input = 16'h0100;
			#10 encoder_input = 16'h0200;
			#10 encoder_input = 16'h0400;
			#10 encoder_input = 16'h0800;
			#10 encoder_input = 16'h1000;
			#10 encoder_input = 16'h2000;
			#10 encoder_input = 16'h4000;
			#10 encoder_input = 16'h8000;
			#10 $finish;
		end 

		initial 
			begin
				$display("Enable\t\t      Input\t\t       Output");
				$monitor("  %b\t\t%b\t\t%b",enable,encoder_input,encoder_output);
			end
endmodule